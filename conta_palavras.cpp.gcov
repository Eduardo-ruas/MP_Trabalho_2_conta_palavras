        -:    0:Source:conta_palavras.cpp
        -:    1:// Copyright 2025 Eduardo de Brito Ruas
        -:    2:
        -:    3:#include "conta_palavras.hpp"  // NOLINT(build/include_subdir)
        -:    4:#include <algorithm>
        -:    5:#include <cctype>
        -:    6:#include <fstream>
        -:    7:#include <iostream>
        -:    8:#include <map>
        -:    9:#include <sstream>
        -:   10:#include <string>
        -:   11:
        -:   12:/**
        -:   13: * @brief Conta a frequência de cada palavra em um arquivo de texto.
        -:   14: *
        -:   15: * Este método lê um arquivo linha por linha, remove pontuações, converte
        -:   16: * as palavras para letras minúsculas e calcula a frequência de cada
        -:   17: * palavra.
        -:   18: *
        -:   19: * @param nomeArquivo Caminho para o arquivo que será processado.
        -:   20: * @return Um mapa onde as chaves são as palavras encontradas no arquivo e os
        -:   21: *         valores são a frequência de cada palavra. Retorna um mapa vazio
        -:   22: *         se o arquivo não puder ser aberto.
        -:   23: */
        7:   24:std::map<std::string, int> ContadorPalavras::contarPalavras(
        -:   25:    const std::string& nomeArquivo) {
        7:   26:  std::map<std::string, int> contagemPalavras;
       14:   27:  std::ifstream arquivo(nomeArquivo);
        -:   28:
        7:   29:  if (!arquivo.is_open()) {
        1:   30:    return contagemPalavras;  // Retorna mapa vazio se não abrir o arquivo
        -:   31:  }
        -:   32:
       12:   33:  std::string linha;
       14:   34:  while (std::getline(arquivo, linha)) {
       16:   35:    std::istringstream iss(linha);
       16:   36:    std::string palavra;
       45:   37:    while (iss >> palavra) {
        -:   38:      // Remove pontuação e converte para minúsculas
        -:   39:      palavra.erase(
       37:   40:          std::remove_if(palavra.begin(), palavra.end(), ::ispunct),
       74:   41:          palavra.end());
        -:   42:      std::transform(palavra.begin(), palavra.end(), palavra.begin(),
       37:   43:                    ::tolower);
        -:   44:
       37:   45:      if (!palavra.empty()) {
       37:   46:        contagemPalavras[palavra]++;
        -:   47:      }
        -:   48:    }
        -:   49:  }
        -:   50:
        6:   51:  arquivo.close();
        6:   52:  return contagemPalavras;
        -:   53:}
